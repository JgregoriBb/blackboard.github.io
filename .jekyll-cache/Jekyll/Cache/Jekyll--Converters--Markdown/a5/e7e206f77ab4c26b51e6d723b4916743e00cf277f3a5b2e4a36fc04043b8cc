I".<h1 id="secure-coding-practices---building-blocks">Secure Coding Practices - Building Blocks</h1>
<p><em>Author: Scott Hurrey</em><br />
<em>Categories: [‘Building Blocks’, ‘Tutorials’]</em><br />
<em>Tags: [‘building blocks’, ‘best practices’, ‘security’, ‘developer’]</em></p>
<hr />

<p>Blackboard takes security seriously and extends that same outlook to
developers by enabling them to apply industry standards of best practice to
their Building Blocks.</p>

<p>Blackboard Learn has integrated with a best practices open source security
library from the <strong>Open Web Application Project’s (OWASP) Enterprise Security
API (ESAPI)</strong>. This security library ships by default installed on Blackboard
Learn through a Building Block called “<em>ESAPI Security Module</em>” and is
required for system operation. Blackboard strongly recommends all Building
Block developers leverage this new Security API based on <strong>OWASP ESAPI for
Java</strong> and <strong>ESAPI for JavaScript</strong>.</p>

<p>You may read more about the ESAPI library and secure development on Learn at
<a href="https://help.blackboard.com/en-us/Learn/9.1_2014_04/Administrator/070_Server_Management_and_Integrations/Security">help.blackboard.com</a>.</p>

<h2 id="secure-coding-best-practices">Secure Coding Best Practices</h2>

<p>As part of secure coding practices, input that may be influenced by users,
whether trusted or not, should be validated on the server-side before
processing (input validation) as well as prior to display (output validation
or escaping). This helps ensure system resiliency and prevents security issues
such as cross-site scripting.</p>

<ul>
  <li>Input Validation: When receiving input from the request, always validate and always validate server-side.</li>
  <li>Output Validation / Encoding / Escaping: When displaying any input, always ensure it is displayed in the correct context that it will be embedded in.</li>
</ul>

<p>In addition to input and output validation Learn also affords the ability to
encrypt data during context passing.</p>

:ET