I"N<h1 id="building-block-scan-tool-for-blackboard-learn-saas">Building Block Scan Tool for Blackboard Learn SaaS</h1>
<p><em>Author: Scott Hurrey</em><br />
<em>Categories: [‘Building Blocks’]</em><br />
<em>Tags: [‘developer’, ‘building blocks’, ‘developers’, ‘saas’, ‘java11’, ‘scan’]</em></p>
<hr />

<p>As of Blackboard Learn SaaS version 3700.11.0, you now have the ability to
scan any installed Building Block for API changes and readiness for Java 11!</p>

<p>You should ONLY run this on your staging environment. It can be resource-
intensive</p>

<p>The process is really quite simple. The scanning tool can be turned on in a
browser by loading the following URL:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://&lt;your Blackboard domain&gt;/webapps/portal/support.jsp?Action=toggleDevOnlyRestEndpoints
</code></pre></div></div>

<p>The resulting screen will look like this:</p>

<p><img src="/images/134391.png" alt="Enable Building Block scan screen" /></p>

<p>Notice the DevOnly endpoint status at the bottom of the screen shot. This is
how you can tell whether you enabled or disabled the scanner.</p>

<p>This endpoint is a toggle; calling it twice will turn it off. This endpoint is
also only valid in your current browser session. If you close the browser, the
scanning tool will be turned off.</p>

<p>Once this is completed, you can scan any currently installed Building Block.
Here are the details:</p>

<p>Endpoint: <code class="highlighter-rouge">https://&lt;your Blackboard domain&gt;/learn/api/v1/healthCheck/deepb2s</code></p>

<p>The endpoint takes the following query parameters</p>

<table>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Description</th>
      <th>Example</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>handle</td>
      <td>The plugin handle for the Building Block</td>
      <td>handle=myB2</td>
    </tr>
    <tr>
      <td>vendor</td>
      <td>The vendor id for the Building Block</td>
      <td>vendor=bbdn</td>
    </tr>
    <tr>
      <td>lookAtEverything</td>
      <td>Configure the scanner to check for all options</td>
      <td>lookAtEverything=true</td>
    </tr>
    <tr>
      <td>onlyReportDependencyProblems</td>
      <td>Only report issues with libraries in use</td>
      <td>onlyReportDependencyProblems=true</td>
    </tr>
    <tr>
      <td>skipReportingB2Overrides</td>
      <td>Don’t report on methods overridden in the Building Block</td>
      <td>skipReportingB2Overrides=true</td>
    </tr>
    <tr>
      <td>groupDependencyIssues</td>
      <td>Group dependency issues together</td>
      <td>groupDependencyIssues=true</td>
    </tr>
  </tbody>
</table>

<p>As an example, to test the building block in our example, you would load the
following URL:</p>

<p><code class="highlighter-rouge">https://&lt;your Blackboard domain&gt;/learn/api/v1/healthCheck/deepb2s?handle=myB2&amp;vendor=bbdn&amp;lookAtEverything=true&amp;onlyReportDependencyProblems=true&amp;skipReportingB2Overrides=true&amp;groupDependencyIssues=true</code></p>

<p>The result of loading this endpoint is a JSON body containing information
about the Building Block and any reported discrepancies. Here is an <a href="/attachments/B2%20Scan%20Output%20Example.txt.zip">example</a> of the output from running this scanner against the youtube mashup
Building Block.</p>

:ET